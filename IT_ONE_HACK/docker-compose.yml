services:
  postgres:
    image: postgres:15
    container_name: postgresql_hack
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: DB_HACK
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d DB_HACK"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    build: .
    command: python backend/create_tables.py
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgreP12@postgres:5432/DB_HACK

  redis:
    image: redis:7-alpine
    container_name: redis_hack
    volumes:
      - redis_data:/data
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python_app
    environment:
      - DATABASE_URL=postgresql://postgres:postgreP12@postgres:5432/DB_HACK
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app/backend:/app
    ports:
      - "8000:8000"
    volumes:
      - .:/app  
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: admin_panel
    ports:
      - "8080:80"
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: